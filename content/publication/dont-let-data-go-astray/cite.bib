@inproceedings{pun2016dont,
            note = {Event Title: Nordic Workshop on Programming Theory (NWPT'16)},
            year = {2016},
          editor = {Kim G. Larsen and Ji{\v r}{\'i} Srba},
        language = {en},
           title = {Don't let data Go astray - A Context-Sensitive Taint Analysis for Concurrent Programs in Go},
           pages = {37--39},
         address = {Aalborg},
          author = {Ka I. Pun and Martin Steffen and Volker Stolz and Anna-Katharina Wickert and Eric Bodden and Michael Eichberg},
           month = {October},
        abstract = {Taint analysis is a form of data flow analysis aiming at secure information flow. For example, unchecked user input is considered typically as ?tainted?, i.e., as untrusted and potentially dangerous.  Untrusted data may lead to corrupt memory, undermine the correct functioning or privacy concerns of the software otherwise, if it reaches program points it is not supposed to.  Many common attack vectors exploit vulnerabilities based on unchecked data and the programmer?s negligence of foreseeing all possible user inputs (including malicious ones) and the resulting information flows through the program. We present a static taint analysis for Go, a modern, statically typed programming language. Go in particular features concurrent programming, supporting light-weight threads dubbed  ?goroutines?, and message-based communication. Beside a classical context-sensitive taint analysis, the paper presents a solution for analyzing channel communication in Go.  A longer version of the material will appear in [2].},
             url = {http://tubiblio.ulb.tu-darmstadt.de/94743/}
}