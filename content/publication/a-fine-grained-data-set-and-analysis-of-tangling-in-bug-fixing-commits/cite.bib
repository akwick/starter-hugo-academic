@article{tubiblio130164,
          author = {Steffen Herbold and Alexander Trautsch and Benjamin Ledel and Alireza Aghamohammadi and Taher Ahmed Ghaleb and Kuljit Kaur Chahal and Tim Bossenmaier and Bhaveet Nagaria and Philip Makedonski and Matin Nili Ahmadabadi and Kristof Szabados and Helge Spieker and Matej Madeja and Nathaniel Hoy and Valentina Lenarduzzi and Shangwen Wang and Gema Rodr?guez-Perez and Ricardo Colomo-Palacios and Roberto Verdecchia and Paramvir Singh and Yihao Qin and Debasish Chakroborti and Willard Davis and Vijay Walunj and Hongjun Wu and Diego Marcilio and Omar Alam and Abdullah Aldaeej and Idan Amit and Burak Turhan and Simon Eismann and Anna-Katharina Wickert and Ivano Malavolta and Matus Sulir and Fatemeh Fard and Austin Z. Henley and Stratos Kourtzanidis and Eray Tuzun and Christoph Treude and Simin Maleki Shamasbi and Ivan Pashchenko and Marvin Wyrich and James Davis and Alexander Serebrenik and Ella Albrecht and Ethem Utku Aktas and Daniel Str{\"u}ber and Johannes Erbel},
            year = {2021},
         journal = {Empirical Software Engineering},
        language = {en},
           title = {A Fine-grained Data Set and Analysis of Tangling in Bug Fixing Commits},
            note = {https://arxiv.org/abs/2011.06244},
        abstract = {Context: Tangled commits are changes to software that address multiple concerns at once. For researchers interested in bugs, tangled commits mean that they actually study not only bugs, but also other concerns irrelevant for the study of bugs. Objective: We want to improve our understanding of the prevalence of tangling and the types of changes that are tangled within bug fixing commits. Methods: We use a crowd sourcing approach for manual labeling to validate which changes contribute to bug fixes for each line in bug fixing commits. Each line is labeled by four participants. If at least three participants agree on the same label, we have consensus. Results: We estimate that between 17\% and 32\% of all changes in bug fixing commits modify the source code to fix the underlying problem. However, when we only consider changes to the production code files this ratio increases to 66\% to 87\%. We find that about 11\% of lines are hard to label leading to active disagreements between participants. Due to confirmed tangling and the uncertainty in our data, we estimate that 3\% to 47\% of data is noisy without manual untangling, depending on the use case. Conclusion: Tangled commits have a high prevalence in bug fixes and can lead to a large amount of noise in the data. Prior research indicates that this noise may alter results. As researchers, we should be skeptics and assume that unvalidated data is likely very noisy, until proven otherwise.}
}